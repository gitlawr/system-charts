# Default values for thanos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

# column split Ids, e.g., c-abc:c-def
clusterIds: ""

rancherHostname: ""

privateCa: false

token: ""


grafana:
  enabled: false
  level: cluster
  apiGroup: "monitoring.coreos.com"
  image:
    repository: rancher/grafana-grafana
    tag: 6.3.6
    pullPolicy: IfNotPresent
    tool:
      repository: rancher/prometheus-auth
      tag: v0.2.0
    proxy:
      repository: rancher/nginx
      tag: 1.17.4-alpine
  nodeSelector: {}
  resources:
    inits:
      limits:
        memory: 50Mi
        cpu: 50m
      requests:
        memory: 50Mi
        cpu: 50m
    core:
      limits:
        memory: 200Mi
        cpu: 200m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  persistence:
    name: ""
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  ## Already exist ServiceAccount
  ##
  serviceAccountName: ""
  prometheusDatasourceURL: "http://thanos-global-monitoring"

thanos:
  enabled: true
  replicaCount: 1
  image:
    repository: thanosio/thanos
    tag: v0.7.0
    pullPolicy: IfNotPresent
    proxy:
      repository: rancher/nginx
      tag: 1.17.4-alpine
  resources:
    thanos:
      limits:
        memory: 300Mi
        cpu: 300m
      requests:
        memory: 50Mi
        cpu: 50m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: NodePort
    port: 80

ui:
  enabled: true
  replicaCount: 1
  image:
    repository: 13025759296/monitor
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 300Mi
      cpu: 300m
    requests:
      memory: 50Mi
      cpu: 50m
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: NodePort
    port: 80