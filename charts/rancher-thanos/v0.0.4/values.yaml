# Default values for rancher-thanos chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

# The following fields are read-only and managed by controllers
clusterIds: ""
rancherHost: ""
token: ""
apiToken: ""


grpcProxyUrl: ""
privateCa: false


grafana:
  enabled: true
  apiGroup: "monitoring.coreos.com"
  image:
    repository: rancher/grafana-grafana
    tag: 6.3.6
    pullPolicy: IfNotPresent
    proxy:
      repository: cnrancher/nginx
      tag: 1.16.1
  nodeSelector: {}
  resources:
    core:
      limits:
        memory: 200Mi
        cpu: 200m
      requests:
        memory: 100Mi
        cpu: 100m
    proxy:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
  persistence:
    name: ""
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  service:
    type: ClusterIP
    port: 80
  # Already exist ServiceAccount
  serviceAccountName: ""
  prometheusDatasourceURL: "http://access-thanos"

alertmanager:
  enabled: false
  replicaCount: 1
  apiGroup: "monitoring.coreos.com"
  image:
    repository: rancher/prom-alertmanager
    tag: v0.17.0
  nodeSelector: {}
  resources:
    limits:
      memory: 200Mi
      cpu: 200m
    requests:
      memory: 100Mi
      cpu: 100m
  persistence:
    name: ""
    enabled: false
    storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 50Gi
  service:
    type: ClusterIP
    port: 80
  config: 
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://127.0.0.1:5001/'
    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']


thanos:
  image:
    repository: rancher/thanos
    tag: v0.9.0
    pullPolicy: IfNotPresent
    proxy:
      repository: cnrancher/nginx
      tag: 1.16.1
    reloader:
      repository: rancher/coreos-configmap-reload
      tag: v0.0.1
  # See https://thanos.io/storage.md/
  objectConfig: {}

  # Thanos query
  query:
    replicaCount: 1
    # Optional additional arguments
    extraArgs: []
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 256Mi
        cpu: 100m 
    proxy:
      resources:
        limits:
          memory: 100Mi
          cpu: 100m
        requests:
          memory: 50Mi
          cpu: 50m
    affinity: {}
    nodeSelector: {}
    tolerations: []
    service:
      type: ClusterIP
      port: 80

  
  # Thanos store gateway
  store:
    enabled: false
    # Optional additional arguments
    extraArgs: []
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 256Mi
        cpu: 100m
    affinity: {}
    nodeSelector: {}
    tolerations: []
  # Thanos compactor
  compact:
    enabled: false
    # Optional additional arguments
    extraArgs: []
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 256Mi
        cpu: 100m
    affinity: {}
    nodeSelector: {}
    tolerations: []
  # Thanos rule
  rule:
    enabled: false
    replicaCount: 1
    # Optional additional arguments
    extraArgs: []
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 256Mi
        cpu: 100m
      reloader:
        resources:
          limits:
            memory: 100Mi
            cpu: 100m
          requests:
            memory: 25Mi
            cpu: 25m
    affinity: {}
    nodeSelector: {}
    tolerations: []
    config:
      groups:
      - name: example
        rules:
        - record: job:http_inprogress_requests:sum
          expr: sum(http_inprogress_requests) by (job)


ui:
  enabled: true
  replicaCount: 1
  image:
    repository: cnrancher/global-monitoring-ui
    tag: 0.0.5
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 300Mi
      cpu: 300m
    requests:
      memory: 50Mi
      cpu: 50m
  affinity: {}
  nodeSelector: {}
  tolerations: []
  title: ""
  tabTitle: ""
  favicon: ""
  logo: ""
  service:
    type: ClusterIP
    port: 80


webhook-receiver:
  enabled: false
  image:
    repository: "cnrancher/webhook-receiver"
    tag: v0.2.3
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 300Mi
      cpu: 300m
    requests:
      memory: 50Mi
      cpu: 50m
  affinity: {}
  nodeSelector: {}
  tolerations: []


exporter:
  enabled: false
  replicaCount: 1
  image:
    repository: "cnrancher/global-monitoring-exporter"
    tag: v0.1.1
  resources:
    limits:
      memory: 300Mi
      cpu: 300m
    requests:
      memory: 50Mi
      cpu: 50m
  affinity: {}
  nodeSelector: {}
  tolerations: []


global:
  systemDefaultRegistry: ""
